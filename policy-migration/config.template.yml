---
# Config file template for policy migration tool.
# The following config values are only example values.

# The HTTP endpoint
httpEndpoint: http://localhost:8080

# OAuth Bearer Token
#bearerToken: <bearerToken>

# OAuth client credentials flow
#oAuth:
#   tokenUrl: <tokenEndpoint>
#   client: <clientId>
#   secret: <clientSecret>
#   scope: <scope>

# Username and password for basic authenication
#basicAuth:
#  user: <username>
#  password: <password>

# Optional namespaces. By default the search uses all available namespaces, but you may also limit the search to the specified namespaces.
#namespaces
#  - namespace1
#  - namespace2

# Optional filter expression. See https://www.eclipse.dev/ditto/basic-rql.html.
# For example, this can be used to limit the set of policies processed during migration.
#filter: in({property},{value},{value},...)

# Migration steps that are applied to the policies.
# Available steps are:
#  - replaceSubject
#  - addSubject
#  - addEntry
#migrations:
#  - replaceSubject:
#      old: <the old subject to replace>
#      new: <the new subject>
#      type: <the subject type>
#  - addSubject:
#      label: <the label of the policy entry for which to add the subject>
#      subject: <the new subject>
#      type: <the subject type>
#  - addEntry:
#      label: <the label of the added policy entry>
#      entry: |
#      {
#        subjects: { theSubject: { type: "theType" } },
#        resources: { "thing:/": { grant: ["READ", "WRITE"], revoke: [] } },
#      }
#      replace: <true, if existing entries should be replaced, false otherwise>
#  - replaceEntries:
#      policyEntries: {
#        "DEFAULT": {
#          "subjects": {
#            "nginx:ditto": {
#              "type": "generated"
#            }
#          },
#          "resources": {
#            "thing:/": {
#              "grant": [
#                "READ",
#                "WRITE"
#              ],
#              "revoke": []
#            },
#            "policy:/": {
#              "grant": [
#                "READ",
#                "WRITE"
#              ],
#              "revoke": []
#            },
#            "message:/": {
#              "grant": [
#                "READ",
#                "WRITE"
#              ],
#              "revoke": []
#            }
#          }
#        }
#      }

# Dry-run mode. If enabled, policy modifications are not applied.
dryRun: true

# Logging config
logging:
  file:
    level: INFO # Log level for logging to file (DEBUG, INFO, WARNING, ERROR, CRITICAL, NOTSET)
    filename: ./migration.log # Log filename
  console:
    level: DEBUG # Log level for logging to console (DEBUG, INFO, WARNING, ERROR, CRITICAL, NOTSET)
